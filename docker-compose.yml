version: '3.8'

volumes:
  postgres_data:
  static_volume:
  media_volume:
  nginx_volume:

services:
  backend:
    build: my_app
    container_name: backend
    volumes:
      - static_volume:/opt/my_app/static/
      - media_volume:/opt/my_app/media/
    env_file:
      - .env
    depends_on:
      - postgres_dc
      - elastic_dc
    links:
      - postgres_dc
      - elastic_dc
    networks:
      - my_net_1
    restart: always

  etl_dc:
    build: etl
    container_name: etl_dc
    restart: always
    env_file:
      - .env
    networks:
      - my_net_1
    depends_on:
      - postgres_dc
      - elastic_dc
      - backend
    links:
      - postgres_dc
      - elastic_dc
      - backend

  postgres_dc:
    image: postgres:14.7
    container_name: postgres_dc
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    env_file:
      - .env
    networks:
      - my_net_1

  elastic_dc:
    image: elasticsearch:8.6.2
    container_name: elastic_dc
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms200m -Xmx200m"
    networks:
      - my_net_1
    restart: always

  nginx_dc:
    image: nginx:1.19.2
    container_name: nginx_dc
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./etc/nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx_volume:/data/:ro
      - static_volume:/opt/my_app/static/
      - media_volume:/opt/my_app/media/
    depends_on:
      - backend
    networks:
      - my_net_1
    restart: always


networks:
  my_net_1:
    driver: bridge
