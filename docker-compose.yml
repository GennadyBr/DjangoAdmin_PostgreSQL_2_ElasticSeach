version: '3.8'

volumes:
  postgres_data:
  static_volume:
  media_volume:

services:
  postgres_dc:
    image: postgres:14.7
    container_name: db_container
    env_file: .postgres_dc_env
    environment:
      TZ: "Europe/Moscow"
      PGTZ: "Europe/Moscow"
    volumes:
      - postgres_data:/var/lib/postgresql/data
#    ports:
#      - "5432:5432"
    restart: always
    networks:
      - my_net_1

  backend:
    # Путь к Dockerfile для сервиса
    build: my_app
    container_name: app_container
    volumes:
      - static_volume:/opt/my_app/static/
      - media_volume:/opt/my_app/media/
    # Порт, с которого сервис будет доступен на локальной машине
    depends_on:
      - postgres_dc
    networks:
      - my_net_1

  # у вас есть некий сервис, который собирается через Dockerfile и отдаёт 8000-й порт.
  # К нему нужно присоединить Nginx, который будет обрабатывать соединения на 80-м порту

  nginx_dc:
    image: nginx:1.19.2
    container_name: nginx_container
    #Прокидываем в Docker-контейнер конфигурацию для Nginx через volumes
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./etc/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./data/:/data/:ro
      - static_volume:/opt/my_app/static/
      - media_volume:/opt/my_app/media/
    depends_on:
      - backend
#    ports:
#      - "80:80"
    networks:
      - my_net_1


  swagger_dc:
    image: swaggerapi/swagger-ui
    container_name: swagger_container
    environment:
      SWAGGER_JSON: /swagger.yaml
    volumes:
      - /home/gennady/PY_YANDEX/new_admin_panel_sprint_2/django_api/openapi.yaml:/swagger.yaml
    depends_on:
      - backend
#    ports:
#      - "8080:8080"
    networks:
      - my_net_1


  elastic_dc:
    image: elasticsearch:8.6.2
    container_name: elastic_container
    env_file: .elastic_dc_env
#    environment:
#      - discovery.type=single-node
#      - xpack.security.enabled=false
#      - ES_JAVA_OPTS="-Xms200m -Xmx200m"
#    ports:
#      - "9200:9200"
    networks:
      - my_net_1


networks:
  my_net_1:
    driver: bridge
